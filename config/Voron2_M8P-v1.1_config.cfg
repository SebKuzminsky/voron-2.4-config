# This file contains common pin mappings for the BIGTREETECH Manta M8P V1.1
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# This config is currently only correct for V1.1 boards
# 
# See docs/Config_Reference.md for a description of parameters.

[mcu]
##	[X in MOTOR1] - B Motor
##	[Y in MOTOR2] - A Motor
##	[E in MOTOR8] - Extruder
##	Obtain definition by "ls /dev/serial/by-id/*" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/YOU_DIDNT_CHANGE_ME_YET
canbus_uuid: f097c7202148
#restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3500    # determined by adxl resonance test <https://www.klipper3d.org/Measuring_Resonances.html#measuring-the-resonances>
max_z_velocity: 30 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[input_shaper]
shaper_freq_x: 47.0
shaper_type_x: mzv
shaper_freq_y: 34.6
shaper_type_y: mzv

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1 (B Motor, left rear)
[stepper_x]
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^sb2209:gpio24
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
position_endstop: 250
position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 50   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC10
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor, right rear)
[stepper_y]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PF4
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
position_endstop: 250
position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PF13
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PD7
dir_pin: PD6
enable_pin: !PF10
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
#endstop_pin: ^PF5
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
#position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF9
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on Motor5
[stepper_z1]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD0
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on Motor6
[stepper_z2]
step_pin: PA10
dir_pin: PA14
enable_pin: !PA15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF8
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on Motor7
[stepper_z3]
step_pin: PD11
dir_pin: !PD9
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PD14
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Extruder
#####################################################################

#	E0 on Motor8
#[extruder]
#step_pin: PD8
#dir_pin: PC6
#enable_pin: !PC7
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:10
#microsteps: 16
#full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: PE3
##	Validate the following thermistor type to make sure it is correct

## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:

#sensor_pin: PA1
#min_temp: 10
#max_temp: 270
#max_power: 1.0
#min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##	E0 on Motor7
##	Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 extruder]
#uart_pin: PD10
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0

#[filament_switch_sensor material_0]
#switch_pin: PC1

#[filament_switch_sensor material_1]
#switch_pin: PC2

[filament_switch_sensor filament_sensor]
# There's a problematic interaction between the Bigtreetech
# SB2209 (RP2040) and the Formbot Filament Runout Sensor:
# <https://github.com/bigtreetech/EBB/issues/88#issuecomment-21>
# The workaround is to solder a 10k resistor between GPIO21 and +5 on
# the SB2209.
switch_pin: sb2209:gpio21
pause_on_runout: True
runout_gcode:
    PARK_MACRO
    M117 Out of Filament
insert_gcode:
    M117 Resuming
    RESUME_MACRO
event_delay: 3.0
pause_delay: 0.5

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PB5
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PA0 # TB
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
# bed wattage is 300W
# mains voltage is 110
max_power: 1.0
min_temp: 0
max_temp: 120
control: pid
pid_Kp=57.951
pid_Ki=3.066
pid_Kd=273.820

#####################################################################
# 	Probe
#####################################################################

[probe]
##	This probe is not used for Z height, only Quad Gantry Leveling
pin: ^sb2209:gpio22
x_offset: 0
y_offset: 0

# `z_offset` is how far "below the bed" the machine needs to move in
# order for the Tap optical sensor to trip.  If Z=0 when the nozzle just
# touches the bed, then the Tap optical sensor trips when Z=z_offset.
z_offset: -1.378

#speed: 10.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
# 	Fan Control
#####################################################################

[multi_pin electronics_fans]
pins: PE6, PE0

[temperature_fan electronics_bay]
pin: multi_pin:electronics_fans
sensor_type: temperature_combined
sensor_list: temperature_sensor SoC, temperature_sensor MCU
combination_method: max
maximum_deviation: 999.9
min_temp: 0
max_temp: 85
target_temp: 48
control: pid
pid_kp = 2
pid_ki = 5
pid_kd = 0.5
pid_deriv_time = 2.0
kick_start_time: 1.0
max_speed: 1.0
min_speed: 0.0


#
# When should the exhaust fan come on?
#
# * Whenever the bed heater is on?
#
# * When the chamber temperature is too high?
#
# * After a print is complete, when the chamber air filter reports that
#   the chamber air is clean enough, and the bed temperature is >50°C?
#
# For now it's manual...
#

[fan_generic exhaust_fan]
#	Controller fan - CNC_FAN2
pin: PC12
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0


#[heater_fan controller_fan]
##	Exhaust fan - CNC_FAN3
#pin: PE5
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 45.0

#[heater_fan fan4]
#pin: PE4
#tachometer_pin: PC13

#[heater_fan fan5]
#pin: PB8
#tachometer_pin: PC14

#[heater_fan fan6]
#pin: PB9
#tachometer_pin: PC15

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB6
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:125,125
speed:100
z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
gantry_corners:
	-60,-10
	310, 320
##	Probe points
points:
	50,25
	50,175
	200,175
	200,25
	
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
#gantry_corners:
#	-60,-10
#	410,420
#	Probe points
#points:
#	50,25
#	50,275
#	300,275
#	300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


[bed_mesh]
speed: 300
horizontal_move_z: 5
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
mesh_min: 40, 40
mesh_max: 210,210
#zero_reference_position: 125,125 # disabled because of TAP

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260
#zero_reference_position: 150,150 #for use with stock z endstop

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
#zero_reference_position: 175,175 #for use with stock z endstop

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE9, EXP1_2=PE10,
    EXP1_3=PE11, EXP1_4=PE12,
    EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
    EXP1_7=PE15, EXP1_8=PB10,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
    EXP2_3=PF7, EXP2_4=PB12,
    EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
#	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------


[gcode_macro PRESENT_TOOLHEAD]
# Bring the toolhead up where i can see it and work on it.
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRESENT_TOOLHEAD
    g90 ; absolute movements
    g0 x125 y0 z75 f12000
    RESTORE_GCODE_STATE NAME=STATE_PRESENT_TOOLHEAD MOVE=0


[gcode_macro _EXTRUDER_VARS]
variable_filament_park_distance: 20    # Distance (mm) to retract before cooldown, and extrude after heat-up
variable_filament_park_speed: 1200     # Speed (mm/m) of filament retract/extrude for cooldown & heat-up
gcode:


[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|float %}
    M140 S{BED_TEMP}            ; set bed temp, nonblocking
    M104 S150                   ; start heating or cooling hot end to a safe non-oozing temp, nonblocking

    G32                         ; home all axes & qgl
    BED_MESH_CALIBRATE

    M190 S{BED_TEMP}            ; set bed temp, blocking
    M109 S{EXTRUDER_TEMP}       ; set hot end temp, blocking

    {% set FILAMENT_PARK_DISTANCE = printer["gcode_macro _EXTRUDER_VARS"].filament_park_distance|float %}
    {% set FILAMENT_PARK_SPEED = printer["gcode_macro _EXTRUDER_VARS"].filament_park_speed|float %}
    G92 E0                      ; zero the extruder
    G1 E{FILAMENT_PARK_DISTANCE} F{FILAMENT_PARK_SPEED}    ; refill the filament that we retracted at the previous PRINT_END

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear

    {% set FILAMENT_PARK_DISTANCE = printer["gcode_macro _EXTRUDER_VARS"].filament_park_distance|float %}
    {% set FILAMENT_PARK_SPEED = printer["gcode_macro _EXTRUDER_VARS"].filament_park_speed|float %}
    G92 E0                         ; zero the extruder
    G1 E-{FILAMENT_PARK_DISTANCE} F{FILAMENT_PARK_SPEED}   ; retract filament to reduce oozing

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

